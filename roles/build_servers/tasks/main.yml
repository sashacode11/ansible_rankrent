- name: install git
  tags: git
  apt:
    name: git
    state: present

- name: Install Node.js and Yarn
  tags: nodejs,yarn
  block:
  - name: Install Node.js
    apt:
      name: nodejs
      state: present
  - name: Install npm
    apt:
      name: npm
      state: present
  - name: Install Yarn
    npm:
      name: yarn
      global: yes
      state: present

- name: Install Java and Jenkins
  tags: jenkins
  block:
  - name: install java
    apt:
      name: openjdk-17-jre-headless
      state: present

  - name: Add jenkins GPG key
    apt_key:
      url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
      state: present

  - name: Add jenkins repository
    apt_repository:
      repo: deb https://pkg.jenkins.io/debian-stable binary/
      state: present
      update_cache: true

  - name: Install jenkins
    apt:
      name: jenkins
      state: present
    notify: enable_jenkins

- name: Install apache2 package
  tags: apache,apache2
  apt:
    name:
      - apache2
      - libapache2-mod-php
    state: latest

- name: Install Required Python modules
  tags: python
  block:
    - name: Ensure Python3 and pip3 are installed
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
        state: present
        update_cache: yes

    - name: Create a virtual environment in /opt/myenv
      command: python3 -m venv /opt/myenv
      args:
        creates: /opt/myenv/bin/activate

    - name: Install Python modules in the virtual environment
      pip:
        virtualenv: /opt/myenv
        name:
          - usaddress
          - playwright
          - js2py
          - bs4
          - phonenumbers
          - tldextract
          - pyyaml
          - csvkit
          - pandas
          - numpy
          - js2py

- name: Install Docker Engine on Ubuntu and Debian
  tags: docker
  block:
    - name: Remove malformed Docker list file
      ansible.builtin.file:
        path: "/etc/apt/sources.list.d/download_docker_com_linux_{{ ansible_distribution|lower }}.list"
        state: absent
      changed_when: false

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: latest
        update_cache: yes

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Engine
      apt:
        name: docker-ce
        state: latest

    #- name: Add current user to the docker group
     # tags: docker
      #user:
       # name: "{{ ansible_user }}"
        #groups: docker
        #append: yes
- name: Install K3s
  tags: k3s
  block:
    - name: Download and install k3s
      shell: |
        curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s

    - name: Set KUBECONFIG environment variable for all users
      copy:
        content: "export KUBECONFIG=/etc/rancher/k3s/k3s.yaml"
        dest: /etc/profile.d/k3s.sh
        mode: '0644'

    - name: Enable and start K3s service
      systemd:
        name: k3s
        enabled: yes
        state: started

    - name: Ensure KUBECONFIG file permissions are correct
      file:
        path: /etc/rancher/k3s/k3s.yaml
        mode: '0644'
        state: file

- name: Install minikube
  tags: minikube
  block:
    - name: Install kubectl
      shell: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        mv kubectl /usr/local/bin/
      args:
        creates: /usr/local/bin/kubectl

    - name: Download and install Minikube
      shell: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
        sudo dpkg -i minikube_latest_amd64.deb
      args:
        creates: /usr/local/bin/minikube

    - name: Check if Minikube is installed
      stat:
        path: /usr/local/bin/minikube
      register: minikube_exists

    - name: Start Minikube
      shell: |
        minikube start --driver=docker
      when: minikube_exists.stat.exists
